
The JCP web site is: http://jcp.org
The JSR80 project web site is http://javax-usb.org

****************
* Requirements *
****************

Java      Standard Edition version 1.2 or greater - Micro Edition has not been tested but may work
ANT       http://jakarta.apache.org/ant (make sure to get the optional.jar file!)

GCC development tools (make, gcc, ld, etc...)

JSR80 API and common RI - You must have the API and common RI classfiles/jars in your CLASSPATH.

Note that pre-installed versions of these tools may not be right, e.g. some distros have "Kaffe"
or "gcc-java" or another version of ant.  Those packages should be replaced/removed.

*********
* Build *
*********

The ANT tool uses XML buildfiles to create the project.  Run ant in
the toplevel directory to list all available targets.

To build JavaDOC including the API and common RI source as well, set your environment variable
JSR80_LINUX_JDOC_PATH to both the API and common RI src/ directories separated with ":".

****************
* Installation *
****************

Add lib/jsr80_linux.jar to your CLASSPATH.
Add the directory containing javax.usb.properties to your CLASSPATH.
Add the directory containing libJavaxUsb.so to your LD_LIBARRY_PATH or /etc/ld.so.conf file.

This implementation uses the "usbfs" filesystem to access the USB topology.  You will need
permission to access the device nodes in that filesystem in order to use javax.usb.  Specifically
you need read-write access to the nodes /proc/bus/usb/NNN/NNN where NNN is a 0-9 digit.  To
change the permissions of the device nodes, you can remount the filesystem with the option
"devmode=666".  If you have an entry in your /etc/fstab file for usbfs (or usbdevfs) then you
can add the option to that file.  If not, your distribution probably explictly mounts the
filesystem in a startup script, so you may have to re-mount it by hand with the devmode option,
or edit a startup script to remount it with the devmode option.

NOTE that by changing the permissions of this filesystem to 666 you are allowing ANYONE on
your system full access to all of your USB devices.  To improve security you should set the
permissions more restrictive and give read-write access to only a specific user or specific group.
